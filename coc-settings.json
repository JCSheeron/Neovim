{
  // coc preferences

  // NOTE: ~ and $HOME are not expanded, and can't be used here and
  // work as expected. use ${env:HOME}

  // Note: Python format on save with black seems to timeout, and not
  // format the file. The willSaveHandlerTimeout property didn't seem
  // to fix it. Work around: Remove python from the list below,
  // and run format manually using BufWritePre in init.vim
  "coc.preferences.formatOnSave": true,
  "coc.preferences.formatOnSaveFiletypes": [
    "c",
    "cpp",
    "css",
    "html",
    "handlebars",
    "javascript",
    "javascriptreact",
    "json",
    "scss",
    "toml"
  ],
  "coc.preferences.willSaveHandlerTimeout": 3000,

  // coc-html
  "html.filetypes": ["html", "handlebars", "htmldjango", "blade"],
  "html.format.indentHandlebars": true,

  // coc-snippets make vim select first item on completion
  // snippets preferences
  "suggest.noselect": false,
  "snippets.userSnippetsDirectory": "${env:HOME}/.config/nvim/snippets",
  "snippets.extends": {
    // extend file type snippets with other file types
    "cpp": ["c"],
    "cuda": ["cpp"],
    "eelixir": ["html"],
    "freemarker": ["html"],
    "htmldjango": ["html"],
    "javascript": ["html"],
    "jinja": ["html"],
    "octave": ["matlab"],
    "pandoc": ["markdown"],
    "scss": ["css"],
    "systemverilog": ["verilog"],
    "typescript": ["javascript"],
    "typescriptreact": ["typescript"],
    "vue": ["html", "javascript", "css"]
  },

  // set up eslint
  // commented these out, warning that eslint properties are not allowed
  // eslint may no longer be installed -- using prettier instead?
  //   "eslint.enable": true,
  //   "eslint.autoFix": false,
  //  "eslint.autoFixOnSave": false,
  //  "eslint.run": "onSave",
  //  "eslint.packageManager": "npm",
  // "eslint.options": {"configFile": "${env:HOME}/.config/nvim/.eslintrc.js"},

  // coc-prettier (for js and related)
  "prettier.singleQuote": true,
  "prettier.trailingComma": "es5",
  "prettier.bracketSpacing": true,
  "prettier.bracketSameLine": false,
  "prettier.semi": true,
  "prettier.useTabs": false,
  "prettier.proseWrap": "preserve",
  "prettier.arrowParens": "always",
  "prettier.statusItemText": "<ᴀ-=> ᴘʀᴇᴛᴛɪᴇʀ",

  // coc-tsserver
  // coc-tssserver - typescript typings support, js and ts lang server
  // Validation is disabled in favor of coc-eslint
  // https://github.com/neoclide/coc-tsserver#configuration-options

  "typescript.validate.enable": false,
  "typescript.preferences.quoteStyle": "single",

  "javascript.validate.enable": false,
  "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
  "javascript.preferences.quoteStyle": "single",

  // python and pyright related
  "pyright.organizeimports.provider": "isort",
  "python.sortImports.path": "${env:HOME}/.local/bin/isort",
  // use project config file
  // "python.sortImports.args": ["--profile", "black"],
  "python.formatting.provider": "black",
  "python.formatting.blackPath": "${env:HOME}/.config/pyenvs/nvim-venv/bin/black",
  "python.formatting.blackArgs": [],
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": true,
  "python.linting.pylintArgs": ["--max-line-length=88"],

  // language servers
  "languageserver": {
    // bash
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh", "bash"],
      "ignoredRootPaths": ["~"]
    }
  },

  // coc-diagnostic
  // how to show errors
  // show on the current line
  //"diagnostic.checkCurrentLine": true,

  // show all
  "diagnostic.virtualText": false,
  "diagnostic.virtualTextCurrentLineOnly": false,
  "diagnostic-languageserver.filetypes": {
    "vim": "vint",
    "bash": "shellcheck",
    "sh": "shellcheck"
  },
  "diagnostic-languageserver.formatFiletypes": {
    // use pyright for python (above) instesd`
    // "python": ["black", "isort"],
    "bash": "shfmt",
    "sh": "shfmt"
  },
  "diagnostic-languageserver.linters": {
    "command": "shellcheck",
    "rootPatterns": [],
    "isStdout": true,
    "isStderr": false,
    "debounce": 100,
    "onSaveOnly": true,
    "args": ["--format=gcc", "-"],
    "offsetLine": 0,
    "offsetColumn": 0,
    "sourceName": "shellcheck",
    "ignore": [".git", "dist/"]
  }
}
